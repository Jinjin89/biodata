}
}
}
}
}
sig_test2[[3]] = c(1,2,4)
fun_list2df(sig_test2,"keep")
fun_list2df_each <- function(input_list,colname){
df = data.frame(row.names = unique(input_list[[1]]))
print(names(input_list))
print(length(names(input_list)))
df[[colname]] = if(length(names(input_list)) == 0) "Unknown" else names(input_list)
df
}
fun_list2df <- function(input_list,multiple_items_solver="keep",colname = "pathway"){
if(fun_check_list_of_vector(input_list)){
if(length(input_list) == 1){
return(fun_list2df_each(input_list,colname = colname))
}else{
common_items = table(unname(unlist(input_list)))
common_items = names(common_items)[common_items > 1]
print(common_items)
# 1) if found common genes
if(length(common_items) == 0 ){
message("no common genes found")
purrr::map_df(seq_along(input_list),function(i){
fun_list2df_each(input_list[i],colname = colname)
}) -> df
return(df)
}else{
purrr::map_df(seq_along(input_list),function(i){
list_new = input_list[i]
list_new[[1]] = setdiff(list_new[[1]],common_items)
fun_list2df_each(list_new,colname = colname)
}) -> df_unique
# solve the common items
if(multiple_items_solver == "drop"){
message(paste0("Drop items appeared in multile categories: ",length(common_items)))
return(df_unique)
}else{
message(paste0("keep items appeared in multile categories: ",length(common_items)))
# 1) final df
df = data.frame(row.names = common_items)
df[[colname]] = NA
# 2) merge data
for(each_item in common_items){
for(each_cate in names(input_list)){
if(each_item %in% input_list[[each_cate]]){
item_now = c(df[each_item,colname],each_cate)
item_now = na.omit(item_now)
df[each_item,colname] = paste0(item_now,collapse = "&")
}
}
}
return(rbind(df_unique,df))
}
}
}
}
}
sig_test2[[3]] = c(1,2,4)
fun_list2df(sig_test2,"keep")
fun_list2df_each <- function(input_list,colname){
df = data.frame(row.names = unique(input_list[[1]]))
df[[colname]] = if(names(input_list) == "") "Unknown" else names(input_list)
df
}
fun_list2df <- function(input_list,multiple_items_solver="keep",colname = "pathway"){
if(fun_check_list_of_vector(input_list)){
if(length(input_list) == 1){
return(fun_list2df_each(input_list,colname = colname))
}else{
common_items = table(unname(unlist(input_list)))
common_items = names(common_items)[common_items > 1]
print(common_items)
# 1) if found common genes
if(length(common_items) == 0 ){
message("no common genes found")
purrr::map_df(seq_along(input_list),function(i){
fun_list2df_each(input_list[i],colname = colname)
}) -> df
return(df)
}else{
purrr::map_df(seq_along(input_list),function(i){
list_new = input_list[i]
list_new[[1]] = setdiff(list_new[[1]],common_items)
fun_list2df_each(list_new,colname = colname)
}) -> df_unique
# solve the common items
if(multiple_items_solver == "drop"){
message(paste0("Drop items appeared in multile categories: ",length(common_items)))
return(df_unique)
}else{
message(paste0("keep items appeared in multile categories: ",length(common_items)))
# 1) final df
df = data.frame(row.names = common_items)
df[[colname]] = NA
# 2) merge data
for(each_item in common_items){
for(each_cate in names(input_list)){
if(each_item %in% input_list[[each_cate]]){
item_now = c(df[each_item,colname],each_cate)
item_now = na.omit(item_now)
df[each_item,colname] = paste0(item_now,collapse = "&")
}
}
}
return(rbind(df_unique,df))
}
}
}
}
}
sig_test2[[3]] = c(1,2,4)
fun_list2df(sig_test2,"keep")
fun_list2df(sig_vec_list,"keep")
fun_list2df(sig_test2[c(1,2)],"keep")
load_all()
document()
?fun_list2df
use_gpl_license()
use_gpl3_license()
use_r("sig_build")
document()
rm(list = c("fun_list2df")
)
rm(list = ls())
document()
document()
usethis::use_version()
use_package("stringr")
use_package("magrittr")
use_package("magrittr",type = 'Depends')
use_package("biodf",type = 'Depends')
load_all()
db_go
load_all()
data(db_go)
data("db_hallmark")
load_all()
load_all()
fun_db2list("NFK",db_hallmark)
loadd_all()
load_all()
load_all()
fun_db2list("NFK",db_hallmark)
load_all()
fun_db2list("NFK",db_hallmark)
load_all()
fun_db2list("NFK",db_hallmark)
fun_db2list <- function(input_name_regex,input_db,name_col="term",value_col = "genes"){
db_filtered =
input_db %>%
dplyr::filter(stringr::str_detect(.[[name_col]],input_name_regex))
print(unique(db_filtered[[name_col]]))
split(db_filtered[[value_col]],db_filtered[[name_col]])
}
if(F){
load_all()
fun_db2list("NFK",db_hallmark)
}
load_all()
fun_db2list("NFK",db_hallmark)
rm(list = ls())
load_all()
fun_db2list("NFK",db_hallmark)
rm(list = ls())
load_all()
fun_db2list("NFK",db_hallmark)
rm(list = ls())
load_all()
fun_db2list("NFK",db_hallmark)
View(hallmark_db)
rm(list = ls())
load_all()
tmp = fun_db2list("NFK",db_hallmark)
rm(list = ls())
load_all()
tmp = fun_db2list("NFK",db_hallmark)
tmp
tmp = fun_db2list("NF",db_hallmark)
tmp$HALLMARK_TNFA_SIGNALING_VIA_NFKB
meta_sig_vec_list = list()
# 1) T cell inflammaed
sig_vec_list$T_cell_inflamed = c(
"IRF1", "CD8A", "CCL2", "CCL3", "CCL4", "CXCL9", "CXCL10", "ICOS",
"GZMK", "HLA-DMA", "HLA-DMB", "HLA-DOA", "HLA-DOB")
meta_sig_vec_list$T_cell_inflamed = "Melanoma-intrinsic β-catenin signalling prevents anti-tumour immunity"
# 2) IFNγ-related gene signature
sig_vec_list$IFN_Gamma_related_gene = c(
"CD8A", "CCL5", "CD27", "CD274", "PDCD1LG2", "CD276", "CMKLR1",
"CXCL9", "CXCR6", "HLA-DQA1", "HLA-DRB1", "HLA-E", "IDO1", "LAG3", "NKG7", "PSMB10", "STAT1", "TIGIT" )
meta_sig_vec_list$IFN_Gamma_related_gene = "IFNgamma-related mRNA profile predicts clinical response to PD-1 blockade"
# 3) T effector signature
sig_vec_list$T_effector = c("GZMA", "GZMB", "PRF1", "EOMES", "IFNG", "TNF", "CXCL9", "CXCL10", "CD8A", "CD4", "FOXP3", "ICOS", "CTLA4")
meta_sig_vec_list$T_effector = "Predictive correlates of response to the anti-PD-L1 antibody MPDL3280A in cancer patients"
# 4) Immune_cytolytic_activity
sig_vec_list$Immune_cytolytic_activity = c("GZMA", "PRF")
meta_sig_vec_list$Immune_cytolytic_activity = "Molecular and genetic properties of tumors associated with local immune cytolytic activity"
sig_vec_list$T_cell_inflamed
sig_vec_list
sig_vec_list
meta_sig_vec_list
use_data(sig_vec_list)
use_data(sig_vec_list,overwrite = T)
use_data(meta_sig_vec_list)
l
meta = list()
meta$meta_sig_vec_list = list()
meta$meta_sig_vec_list = list()
meta
# 1) T cell inflammaed
sig_vec_list$T_cell_inflamed = c(
"IRF1", "CD8A", "CCL2", "CCL3", "CCL4", "CXCL9", "CXCL10", "ICOS",
"GZMK", "HLA-DMA", "HLA-DMB", "HLA-DOA", "HLA-DOB")
meta$meta_sig_vec_list$T_cell_inflamed = "Melanoma-intrinsic β-catenin signalling prevents anti-tumour immunity"
# 2) IFNγ-related gene signature
sig_vec_list$IFN_Gamma_related_gene = c(
"CD8A", "CCL5", "CD27", "CD274", "PDCD1LG2", "CD276", "CMKLR1",
"CXCL9", "CXCR6", "HLA-DQA1", "HLA-DRB1", "HLA-E", "IDO1", "LAG3", "NKG7", "PSMB10", "STAT1", "TIGIT" )
meta$meta_sig_vec_list$IFN_Gamma_related_gene = "IFNgamma-related mRNA profile predicts clinical response to PD-1 blockade"
# 3) T effector signature
sig_vec_list$T_effector = c("GZMA", "GZMB", "PRF1", "EOMES", "IFNG", "TNF", "CXCL9", "CXCL10", "CD8A", "CD4", "FOXP3", "ICOS", "CTLA4")
meta$meta_sig_vec_list$T_effector = "Predictive correlates of response to the anti-PD-L1 antibody MPDL3280A in cancer patients"
# 4) Immune_cytolytic_activity
sig_vec_list$Immune_cytolytic_activity = c("GZMA", "PRF")
meta$meta_sig_vec_list$Immune_cytolytic_activity = "Molecular and genetic properties of tumors associated with local immune cytolytic activity"
meta = list()
meta$sig_vec_list = list()
# 1) T cell inflammaed
sig_vec_list$T_cell_inflamed = c(
"IRF1", "CD8A", "CCL2", "CCL3", "CCL4", "CXCL9", "CXCL10", "ICOS",
"GZMK", "HLA-DMA", "HLA-DMB", "HLA-DOA", "HLA-DOB")
meta$sig_vec_list$T_cell_inflamed = "Melanoma-intrinsic β-catenin signalling prevents anti-tumour immunity"
# 2) IFNγ-related gene signature
sig_vec_list$IFN_Gamma_related_gene = c(
"CD8A", "CCL5", "CD27", "CD274", "PDCD1LG2", "CD276", "CMKLR1",
"CXCL9", "CXCR6", "HLA-DQA1", "HLA-DRB1", "HLA-E", "IDO1", "LAG3", "NKG7", "PSMB10", "STAT1", "TIGIT" )
meta$sig_vec_list$IFN_Gamma_related_gene = "IFNgamma-related mRNA profile predicts clinical response to PD-1 blockade"
# 3) T effector signature
sig_vec_list$T_effector = c("GZMA", "GZMB", "PRF1", "EOMES", "IFNG", "TNF", "CXCL9", "CXCL10", "CD8A", "CD4", "FOXP3", "ICOS", "CTLA4")
meta$sig_vec_list$T_effector = "Predictive correlates of response to the anti-PD-L1 antibody MPDL3280A in cancer patients"
# 4) Immune_cytolytic_activity
sig_vec_list$Immune_cytolytic_activity = c("GZMA", "PRF")
meta$sig_vec_list$Immune_cytolytic_activity = "Molecular and genetic properties of tumors associated with local immune cytolytic activity"
meta$sig_vec_list
use_data_table(meta)
use_data(meta)
docu
devtools::document()
docu
document()
require(devtools)
document()
document()
document()
build()
document()
build()
build()
devtools::build()
gc()
require(devtools)
load_all()
# 5)Martinez_Gordon_M1
sig_vec_list$Martinez_Gordon_M1 = c("CD64", "IDO", "SOCS1", "CXCL10")
# 5)Martinez_Gordon_M1
sig_vec_list$Martinez_Gordon_M1 = c("CD64", "IDO", "SOCS1", "CXCL10")
sig_vec_list$Martinez_Gordon_M2 = c("MRC1", "TGM2", "CD23", "CCL22")
meta$sig_vec_list$Martinez_Gordon_M1 = "The M1 and M2 paradigm of macrophage activation: time for reassessment"
meta$sig_vec_list$Martinez_Gordon_M1 = "The M1 and M2 paradigm of macrophage activation: time for reassessment"
meta$sig_vec_list$Martinez_Gordon_M2 = "The M1 and M2 paradigm of macrophage activation: time for reassessment"
sig_vec_list
use_data(sig_vec_list)
use_data(sig_vec_list,overwrite = T)
build()
# 1) T cell inflammaed
sig_vec_list$T_cell_inflamed = c(
"IRF1", "CD8A", "CCL2", "CCL3", "CCL4", "CXCL9", "CXCL10", "ICOS",
"GZMK", "HLA-DMA", "HLA-DMB", "HLA-DOA", "HLA-DOB")
meta$sig_vec_list$T_cell_inflamed = "Melanoma-intrinsic β-catenin signalling prevents anti-tumour immunity"
# 2) IFNγ-related gene signature
sig_vec_list$IFN_Gamma_related_gene = c(
"CD8A", "CCL5", "CD27", "CD274", "PDCD1LG2", "CD276", "CMKLR1",
"CXCL9", "CXCR6", "HLA-DQA1", "HLA-DRB1", "HLA-E", "IDO1", "LAG3", "NKG7", "PSMB10", "STAT1", "TIGIT" )
meta$sig_vec_list$IFN_Gamma_related_gene = "IFNgamma-related mRNA profile predicts clinical response to PD-1 blockade"
# 3) T effector signature
sig_vec_list$T_effector = c("GZMA", "GZMB", "PRF1", "EOMES", "IFNG", "TNF", "CXCL9", "CXCL10", "CD8A", "CD4", "FOXP3", "ICOS", "CTLA4")
meta$sig_vec_list$T_effector = "Predictive correlates of response to the anti-PD-L1 antibody MPDL3280A in cancer patients"
# 4) Immune_cytolytic_activity
sig_vec_list$Immune_cytolytic_activity = c("GZMA", "PRF")
meta$sig_vec_list$Immune_cytolytic_activity = "Molecular and genetic properties of tumors associated with local immune cytolytic activity"
# 5)Martinez_Gordon_M1/2
sig_vec_list$Martinez_Gordon_M1 = c("CD64", "IDO1", "SOCS1", "CXCL10")
sig_vec_list$Martinez_Gordon_M2 = c("MRC1", "TGM2", "CD23", "CCL22")
meta$sig_vec_list$Martinez_Gordon_M1 = "The M1 and M2 paradigm of macrophage activation: time for reassessment"
meta$sig_vec_list$Martinez_Gordon_M2 = "The M1 and M2 paradigm of macrophage activation: time for reassessment"
# 6)
sig_vec_list$Murray_M1 = c("IL23A", "IDO1","PTGS2","COX2","IL12B","NOS2","SOCS3")
sig_vec_list$Murray_M2 = c("KLF4", "CCL24", "CCL12", "CXCL13","CHIA","IRF4","SOCS2","RETNLB","CHI3L1","CHI3L2","CHI3L3")
meta$sig_vec_list$Murray_M1 = "The M1 and M2 paradigm of macrophage activation: time for reassessment"
meta$sig_vec_list$Murray_M2 = "The M1 and M2 paradigm of macrophage activation: time for reassessment"
use_data(meta,overwrite = T)
use_data(sig_vec_list,overwrite = T)
document()
build()
gc()
rm(list = ls())
data.table::fread("~/data/tcga_tide_tidepy.csv")
tcga_tide = data.table::fread("~/data/tcga_tide_tidepy.csv")
tcga_tide
require(devtools)
load_all()
tcga_tide = data.table::fread("~/data/tcga_tide_tidepy.csv") %>%
as.data.frame() %>%
set_rownames(.$sample)
tcga_tide
use_data(tcga_tide)
tcga_tide_tidepy = data.table::fread("~/data/tcga_tide_tidepy.csv") %>%
as.data.frame() %>%
set_rownames(.$sample)
use_data(tcga_tide_tidepy)
tcga_tide = readRDS("~/data/tmp_tide.rds")
tcga_tide
use_data(tcga_tide,overwrite = T)
tcga_immune
db_kegg_metabolism = readRDS("~/data/project/db/genes/kegg_metabolism.rds")
db_reactome_metabolism = readRDS("~/data/project/db/genes/reactome_metabolism.rds")
db_kegg_metabolism
db_kegg_metabolism
db_kegg
db_kegg
load_all()
db_kegg
db_reactome_metabolism
use_data(db_reactome_metabolism)
use_data(db_kegg_metabolism)
load_all()
build()
build()
document()
build()
# 1) get MHC
mhc_string = c("B2M MHC-classical, class-I TAP1 MHC-classical, class-I TAP2 MHC-classical, class-I TAPBP MHC-classical, class-I HLA-A MHC-classical, class-I HLA-B MHC-classical, class-I HLA-C MHC-classical, class-I HLA-DPA1 MHC-classical, class-II HLA-DPB1 MHC-classical, class-II HLA-DQA1 MHC-classical, class-II HLA-DQA2 MHC-classical, class-II HLA-DQB1 MHC-classical, class-II HLA-DRA MHC-classical, class-II HLA-DRB1 MHC-classical, class-II HLA-E MHC-non-class, class-I HLA-F MHC-non-class, class-I HLA-G MHC-non-class, class-I HLA-DMA MHC-non-class, class-II HLA-DMB MHC-non-class, class-II HLA-DOA MHC-non-class, class-II HLA-DOB MHC-non-class, class-II")
stringr::str_split(mhc_string,"MHC-")
stringr::str_split(mhc_string,"MHC-") %>%
unlist()
require(biodf)
stringr::str_split(mhc_string,"MHC-") %>%
unlist()
require(devtools)
load_all()
stringr::str_split(mhc_string,"MHC-") %>%
unlist()
# 1) get MHC
mhc_string = c("B2M MHC-classical, class-I TAP1 MHC-classical, class-I TAP2 MHC-classical, class-I TAPBP MHC-classical, class-I HLA-A MHC-classical, class-I HLA-B MHC-classical, class-I HLA-C MHC-classical, class-I HLA-DPA1 MHC-classical, class-II HLA-DPB1 MHC-classical, class-II HLA-DQA1 MHC-classical, class-II HLA-DQA2 MHC-classical, class-II HLA-DQB1 MHC-classical, class-II HLA-DRA MHC-classical, class-II HLA-DRB1 MHC-classical, class-II HLA-E MHC-non-class, class-I HLA-F MHC-non-class, class-I HLA-G MHC-non-class, class-I HLA-DMA MHC-non-class, class-II HLA-DMB MHC-non-class, class-II HLA-DOA MHC-non-class, class-II HLA-DOB MHC-non-class, class-II")
stringr::str_split(mhc_string,"MHC-") %>%
unlist()
stringr::str_remove(x,"non-class, class-I(I){0,1}")
stringr::str_split(mhc_string,"MHC-") %>%
unlist() %>%
purrr::map(\(x){
stringr::str_remove(x,"non-class, class-I(I){0,1}")
})
stringr::str_split(mhc_string,"MHC-") %>%
unlist() %>%
purrr::map_chr(\(x){
stringr::str_remove(x,"non-class, class-I(I){0,1}")
})
stringr::str_split(mhc_string,"MHC-") %>%
unlist() %>%
purrr::map_chr(\(x){
stringr::str_remove(x,"non-class, class-I(I){0,1}|classical, class-I(I){0,1}")
})
stringr::str_split(mhc_string,"MHC-") %>%
unlist() %>%
purrr::map_chr(\(x){
stringr::str_remove_all(x,"non-class, class-I(I){0,1}|classical, class-I(I){0,1}| ")
})
mhc_string =
stringr::str_split(mhc_string,"MHC-") %>%
unlist() %>%
purrr::map_chr(\(x){
stringr::str_remove_all(x,"non-class, class-I(I){0,1}|classical, class-I(I){0,1}| ")
})
mhc_string = mhc_string[!= ""]
mhc_string
mhc_string = mhc_string[mhc_string!= ""]
mhc_string
sig_vec_list$MHC =mhc_string
meta$sig_vec_list$MHC = "Pan-cancer Immunogenomic Analyses Reveal Genotype-Immunophenotype Relationships and Predictors of Response to Checkpoint Blockade"
si_string = stringr::str_split(si_string,"Immunostimulator")
si_string
#2) simmulator genes
si_string = "MICA Immunostimulator MICB Immunostimulator CD27 Immunostimulator CD274 Immunostimulator CD28 Immunostimulator CD40 Immunostimulator CD40LG Immunostimulator CD70 Immunostimulator CD80 Immunostimulator CD86 Immunostimulator ICOS Immunostimulator ICOSLG Immunostimulator IL6 Immunostimulator IL6R Immunostimulator PDCD1LG2 Immunostimulator TMEM173 Immunostimulator TNFRSF13B Immunostimulator TNFRSF13C Immunostimulator TNFRSF14 Immunostimulator TNFRSF17 Immunostimulator TNFRSF18 Immunostimulator TNFRSF4 Immunostimulator TNFRSF9 Immunostimulator TNFSF13 Immunostimulator TNFSF13B Immunostimulator TNFSF18 Immunostimulator TNFSF4 Immunostimulator TNFSF9 Immunostimulator TNFSF15 Immunostimulator TNFRSF25 Immunostimulator HHLA2 Immunostimulator TMIGD2 Immunostimulator C10orf54 Immunostimulator BTNL2 Immunostimulator CD276 Immunostimulator CD48 Immunostimulator TNFSF14 Immunostimulator TNFRSF8 Immunostimulator CD70 Immunostimulator PVR Immunostimulator LTA Immunostimulator MICA Immunostimulator MICB Immunostimulator IL2RA Immunostimulator ENTPD1 Immunostimulator NT5E Immunostimulator CXCR4 Immunostimulator CXCL12 Immunostimulator KLRK1 Immunostimulator NKG2A Immunostimulator RAET1E Immunostimulator ULBP1 Immunostimulator"
si_string = stringr::str_split(si_string,"Immunostimulator")
si_string
si_string = stringr::str_split(si_string,"Immunostimulator") %>%
unlist() %>%
purrr::map(\(x)stringr::str_remove_all(x," "))
#2) simmulator genes
si_string = "MICA Immunostimulator MICB Immunostimulator CD27 Immunostimulator CD274 Immunostimulator CD28 Immunostimulator CD40 Immunostimulator CD40LG Immunostimulator CD70 Immunostimulator CD80 Immunostimulator CD86 Immunostimulator ICOS Immunostimulator ICOSLG Immunostimulator IL6 Immunostimulator IL6R Immunostimulator PDCD1LG2 Immunostimulator TMEM173 Immunostimulator TNFRSF13B Immunostimulator TNFRSF13C Immunostimulator TNFRSF14 Immunostimulator TNFRSF17 Immunostimulator TNFRSF18 Immunostimulator TNFRSF4 Immunostimulator TNFRSF9 Immunostimulator TNFSF13 Immunostimulator TNFSF13B Immunostimulator TNFSF18 Immunostimulator TNFSF4 Immunostimulator TNFSF9 Immunostimulator TNFSF15 Immunostimulator TNFRSF25 Immunostimulator HHLA2 Immunostimulator TMIGD2 Immunostimulator C10orf54 Immunostimulator BTNL2 Immunostimulator CD276 Immunostimulator CD48 Immunostimulator TNFSF14 Immunostimulator TNFRSF8 Immunostimulator CD70 Immunostimulator PVR Immunostimulator LTA Immunostimulator MICA Immunostimulator MICB Immunostimulator IL2RA Immunostimulator ENTPD1 Immunostimulator NT5E Immunostimulator CXCR4 Immunostimulator CXCL12 Immunostimulator KLRK1 Immunostimulator NKG2A Immunostimulator RAET1E Immunostimulator ULBP1 Immunostimulator"
si_string = stringr::str_split(si_string,"Immunostimulator") %>%
unlist() %>%
purrr::map(\(x)stringr::str_remove_all(x," "))
si_string
#2) simmulator genes
si_string = "MICA Immunostimulator MICB Immunostimulator CD27 Immunostimulator CD274 Immunostimulator CD28 Immunostimulator CD40 Immunostimulator CD40LG Immunostimulator CD70 Immunostimulator CD80 Immunostimulator CD86 Immunostimulator ICOS Immunostimulator ICOSLG Immunostimulator IL6 Immunostimulator IL6R Immunostimulator PDCD1LG2 Immunostimulator TMEM173 Immunostimulator TNFRSF13B Immunostimulator TNFRSF13C Immunostimulator TNFRSF14 Immunostimulator TNFRSF17 Immunostimulator TNFRSF18 Immunostimulator TNFRSF4 Immunostimulator TNFRSF9 Immunostimulator TNFSF13 Immunostimulator TNFSF13B Immunostimulator TNFSF18 Immunostimulator TNFSF4 Immunostimulator TNFSF9 Immunostimulator TNFSF15 Immunostimulator TNFRSF25 Immunostimulator HHLA2 Immunostimulator TMIGD2 Immunostimulator C10orf54 Immunostimulator BTNL2 Immunostimulator CD276 Immunostimulator CD48 Immunostimulator TNFSF14 Immunostimulator TNFRSF8 Immunostimulator CD70 Immunostimulator PVR Immunostimulator LTA Immunostimulator MICA Immunostimulator MICB Immunostimulator IL2RA Immunostimulator ENTPD1 Immunostimulator NT5E Immunostimulator CXCR4 Immunostimulator CXCL12 Immunostimulator KLRK1 Immunostimulator NKG2A Immunostimulator RAET1E Immunostimulator ULBP1 Immunostimulator"
si_string = stringr::str_split(si_string,"Immunostimulator") %>%
unlist() %>%
purrr::map(\(x)stringr::str_remove_all(x," ")) %>% unlist()
si_string
si_string = stringr::str_split(si_string,"Immunostimulator") %>%
unlist() %>%
purrr::map(\(x)stringr::str_remove_all(x," ")) %>%
unlist() %>%
{.[. != ""]}
#2) simmulator genes
si_string = "MICA Immunostimulator MICB Immunostimulator CD27 Immunostimulator CD274 Immunostimulator CD28 Immunostimulator CD40 Immunostimulator CD40LG Immunostimulator CD70 Immunostimulator CD80 Immunostimulator CD86 Immunostimulator ICOS Immunostimulator ICOSLG Immunostimulator IL6 Immunostimulator IL6R Immunostimulator PDCD1LG2 Immunostimulator TMEM173 Immunostimulator TNFRSF13B Immunostimulator TNFRSF13C Immunostimulator TNFRSF14 Immunostimulator TNFRSF17 Immunostimulator TNFRSF18 Immunostimulator TNFRSF4 Immunostimulator TNFRSF9 Immunostimulator TNFSF13 Immunostimulator TNFSF13B Immunostimulator TNFSF18 Immunostimulator TNFSF4 Immunostimulator TNFSF9 Immunostimulator TNFSF15 Immunostimulator TNFRSF25 Immunostimulator HHLA2 Immunostimulator TMIGD2 Immunostimulator C10orf54 Immunostimulator BTNL2 Immunostimulator CD276 Immunostimulator CD48 Immunostimulator TNFSF14 Immunostimulator TNFRSF8 Immunostimulator CD70 Immunostimulator PVR Immunostimulator LTA Immunostimulator MICA Immunostimulator MICB Immunostimulator IL2RA Immunostimulator ENTPD1 Immunostimulator NT5E Immunostimulator CXCR4 Immunostimulator CXCL12 Immunostimulator KLRK1 Immunostimulator NKG2A Immunostimulator RAET1E Immunostimulator ULBP1 Immunostimulator"
si_string = stringr::str_split(si_string,"Immunostimulator") %>%
unlist() %>%
purrr::map(\(x)stringr::str_remove_all(x," ")) %>%
unlist() %>%
{.[. != ""]}
si_string
sig_vec_list$Immunostimulator =si_string
sig_vec_list
meta$Immunostimulator$MHC = "Pan-cancer Immunogenomic Analyses Reveal Genotype-Immunophenotype Relationships and Predictors of Response to Checkpoint Blockade"
# 3) chemokines
"CCL1	CCL11	CCL13	CCL14	CCL15	CCL16	CCL17	CCL18	CCL19	CCL2	CCL20	CCL21	CCL22	CCL23	CCL24	CCL25	CCL26	CCL27	CCL28	CCL3	CCL4	CCL5	CCL7	CCL8	CX3CL1	CXCL1	CXCL10	CXCL11	CXCL12	CXCL13	CXCL14	CXCL16	CXCL17	CXCL2	CXCL3	CXCL5	CXCL6	CXCL8	CXCL9" %>%
str_split(" ")
# 3) chemokines
"CCL1	CCL11	CCL13	CCL14	CCL15	CCL16	CCL17	CCL18	CCL19	CCL2	CCL20	CCL21	CCL22	CCL23	CCL24	CCL25	CCL26	CCL27	CCL28	CCL3	CCL4	CCL5	CCL7	CCL8	CX3CL1	CXCL1	CXCL10	CXCL11	CXCL12	CXCL13	CXCL14	CXCL16	CXCL17	CXCL2	CXCL3	CXCL5	CXCL6	CXCL8	CXCL9" %>%
str_split("\t")
# 3) chemokines
"CCL1	CCL11	CCL13	CCL14	CCL15	CCL16	CCL17	CCL18	CCL19	CCL2	CCL20	CCL21	CCL22	CCL23	CCL24	CCL25	CCL26	CCL27	CCL28	CCL3	CCL4	CCL5	CCL7	CCL8	CX3CL1	CXCL1	CXCL10	CXCL11	CXCL12	CXCL13	CXCL14	CXCL16	CXCL17	CXCL2	CXCL3	CXCL5	CXCL6	CXCL8	CXCL9" %>%
str_split("\t") %>%
unlist()
# 3) chemokines
sig_vec_list$Chemokine =
"CCL1	CCL11	CCL13	CCL14	CCL15	CCL16	CCL17	CCL18	CCL19	CCL2	CCL20	CCL21	CCL22	CCL23	CCL24	CCL25	CCL26	CCL27	CCL28	CCL3	CCL4	CCL5	CCL7	CCL8	CX3CL1	CXCL1	CXCL10	CXCL11	CXCL12	CXCL13	CXCL14	CXCL16	CXCL17	CXCL2	CXCL3	CXCL5	CXCL6	CXCL8	CXCL9" %>%
str_split("\t") %>%
unlist()
sig_vec_list$Chemokine
sig_vec_list$Chemokine_receptor <-
"CCR1	CCR10	CCR2	CCR3	CCR4	CCR5	CCR6	CCR7	CCR8	CCR9	CXCR1	CXCR2	CXCR3	CXCR4	CXCR5	CXCR6	CX3CR1" %>%
str_split("\t") %>%
unlist()
sig_vec_list$Chemokine_receptor
sig_vec_list$Immunostimulator =si_string
meta$sig_vec_list$Immunostimulator = "Pan-cancer Immunogenomic Analyses Reveal Genotype-Immunophenotype Relationships and Predictors of Response to Checkpoint Blockade"
# 3) chemokines
sig_vec_list$Chemokine =
"CCL1	CCL11	CCL13	CCL14	CCL15	CCL16	CCL17	CCL18	CCL19	CCL2	CCL20	CCL21	CCL22	CCL23	CCL24	CCL25	CCL26	CCL27	CCL28	CCL3	CCL4	CCL5	CCL7	CCL8	CX3CL1	CXCL1	CXCL10	CXCL11	CXCL12	CXCL13	CXCL14	CXCL16	CXCL17	CXCL2	CXCL3	CXCL5	CXCL6	CXCL8	CXCL9" %>%
str_split("\t") %>%
unlist()
sig_vec_list$Chemokine_receptor <-
"CCR1	CCR10	CCR2	CCR3	CCR4	CCR5	CCR6	CCR7	CCR8	CCR9	CXCR1	CXCR2	CXCR3	CXCR4	CXCR5	CXCR6	CX3CR1" %>%
str_split("\t") %>%
unlist()
meta$sig_vec_list$Chemokine = "Siglec15 shapes a non-inflamed tumor microenvironment and predicts the molecular subtype in bladder cancer"
meta
meta$sig_vec_list$Chemokine_receptor = "Siglec15 shapes a non-inflamed tumor microenvironment and predicts the molecular subtype in bladder cancer"
require(devtools)
load_all()
# 1) get MHC
mhc_string = c("B2M MHC-classical, class-I TAP1 MHC-classical, class-I TAP2 MHC-classical, class-I TAPBP MHC-classical, class-I HLA-A MHC-classical, class-I HLA-B MHC-classical, class-I HLA-C MHC-classical, class-I HLA-DPA1 MHC-classical, class-II HLA-DPB1 MHC-classical, class-II HLA-DQA1 MHC-classical, class-II HLA-DQA2 MHC-classical, class-II HLA-DQB1 MHC-classical, class-II HLA-DRA MHC-classical, class-II HLA-DRB1 MHC-classical, class-II HLA-E MHC-non-class, class-I HLA-F MHC-non-class, class-I HLA-G MHC-non-class, class-I HLA-DMA MHC-non-class, class-II HLA-DMB MHC-non-class, class-II HLA-DOA MHC-non-class, class-II HLA-DOB MHC-non-class, class-II")
mhc_string =  stringr::str_split(mhc_string,"MHC-") %>%
unlist() %>%
purrr::map_chr(\(x){
stringr::str_remove_all(x,"non-class, class-I(I){0,1}|classical, class-I(I){0,1}| ")
})
mhc_string = mhc_string[mhc_string!= ""]
sig_vec_list$MHC =mhc_string
meta$sig_vec_list$MHC = "Pan-cancer Immunogenomic Analyses Reveal Genotype-Immunophenotype Relationships and Predictors of Response to Checkpoint Blockade"
#2) simmulator genes
si_string = "MICA Immunostimulator MICB Immunostimulator CD27 Immunostimulator CD274 Immunostimulator CD28 Immunostimulator CD40 Immunostimulator CD40LG Immunostimulator CD70 Immunostimulator CD80 Immunostimulator CD86 Immunostimulator ICOS Immunostimulator ICOSLG Immunostimulator IL6 Immunostimulator IL6R Immunostimulator PDCD1LG2 Immunostimulator TMEM173 Immunostimulator TNFRSF13B Immunostimulator TNFRSF13C Immunostimulator TNFRSF14 Immunostimulator TNFRSF17 Immunostimulator TNFRSF18 Immunostimulator TNFRSF4 Immunostimulator TNFRSF9 Immunostimulator TNFSF13 Immunostimulator TNFSF13B Immunostimulator TNFSF18 Immunostimulator TNFSF4 Immunostimulator TNFSF9 Immunostimulator TNFSF15 Immunostimulator TNFRSF25 Immunostimulator HHLA2 Immunostimulator TMIGD2 Immunostimulator C10orf54 Immunostimulator BTNL2 Immunostimulator CD276 Immunostimulator CD48 Immunostimulator TNFSF14 Immunostimulator TNFRSF8 Immunostimulator CD70 Immunostimulator PVR Immunostimulator LTA Immunostimulator MICA Immunostimulator MICB Immunostimulator IL2RA Immunostimulator ENTPD1 Immunostimulator NT5E Immunostimulator CXCR4 Immunostimulator CXCL12 Immunostimulator KLRK1 Immunostimulator NKG2A Immunostimulator RAET1E Immunostimulator ULBP1 Immunostimulator"
si_string = stringr::str_split(si_string,"Immunostimulator") %>%
unlist() %>%
purrr::map(\(x)stringr::str_remove_all(x," ")) %>%
unlist() %>%
{.[. != ""]}
sig_vec_list$Immunostimulator =si_string
meta$sig_vec_list$Immunostimulator = "Pan-cancer Immunogenomic Analyses Reveal Genotype-Immunophenotype Relationships and Predictors of Response to Checkpoint Blockade"
# 3) chemokines
sig_vec_list$Chemokine =
"CCL1	CCL11	CCL13	CCL14	CCL15	CCL16	CCL17	CCL18	CCL19	CCL2	CCL20	CCL21	CCL22	CCL23	CCL24	CCL25	CCL26	CCL27	CCL28	CCL3	CCL4	CCL5	CCL7	CCL8	CX3CL1	CXCL1	CXCL10	CXCL11	CXCL12	CXCL13	CXCL14	CXCL16	CXCL17	CXCL2	CXCL3	CXCL5	CXCL6	CXCL8	CXCL9" %>%
str_split("\t") %>%
unlist()
sig_vec_list$Chemokine_receptor <-
"CCR1	CCR10	CCR2	CCR3	CCR4	CCR5	CCR6	CCR7	CCR8	CCR9	CXCR1	CXCR2	CXCR3	CXCR4	CXCR5	CXCR6	CX3CR1" %>%
str_split("\t") %>%
unlist()
meta$sig_vec_list$Chemokine = "Siglec15 shapes a non-inflamed tumor microenvironment and predicts the molecular subtype in bladder cancer"
meta$sig_vec_list$Chemokine_receptor = "Siglec15 shapes a non-inflamed tumor microenvironment and predicts the molecular subtype in bladder cancer"
View(meta)
sig_vec_list$Chemokine_receptor
sig_vec_list %>% View
use_data(meta)
use_data(meta,overwrite = T)
use_data(sig_vec_list,overwrite = T)
require(devtools)
load_all()
biodata::sig_vec_list
document()
build()
tcga_immuneCellAI = readRDS("~/data/project/db/tcga/others/immuneCellAI.rds")
tcga_immuneCellAI
use_data(tcga_immuneCellAI)
document()
build()
gc()
